name: build-openwrt

on:
  schedule:
    - cron: '0 2 * * *'     # 每日 UTC +0 的 2 点自动运行
  workflow_dispatch:

env:
  OPENWRT_VER: '24.10.1'
  KERNEL_VER: '6.12.33'
  PASSWALL_VER: '4.72-2'
  RELEASE_BRANCH: 'main'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v4

    - name: Setup build deps
      run: |
        sudo apt update
        sudo apt install -y git build-essential libncurses-dev gawk             libssl-dev gettext file unzip python3 python3-venv

    - name: Fetch latest kernel LTS
      id: kernel
      run: |
        LATEST_TAG=$(wget -qO- https://git.kernel.org/pub/scm/linux/kernel/git/stable/stable.git/log/?h=linux-6.12.y           | grep -m1 'commit' -B1 'tag:'           | grep -Po 'v6\.12\.\d+'           | head -n1)
        echo "Latest kernel: $LATEST_TAG"
        echo "latest=$LATEST_TAG" >> "$GITHUB_OUTPUT"

    - name: Update KERNEL_VER if newer
      if: steps.kernel.outputs.latest != env.KERNEL_VER
      run: |
        echo "::notice Updating kernel from $KERNEL_VER to ${{ steps.kernel.outputs.latest }}"
        echo "KERNEL_VER=${{ steps.kernel.outputs.latest }}" >> $GITHUB_ENV

    - name: Download OpenWrt
      run: |
        rm -rf openwrt
        git clone --depth 1 -b openwrt-${OPENWRT_VER} https://git.openwrt.org/openwrt/openwrt.git openwrt
        cd openwrt

        sed -i "s|TARGET_KERNEL_PATCHVER:=[0-9.-]*|TARGET_KERNEL_PATCHVER:=${KERNEL_VER}|" include/kernel-version.mk
        sed -i "s|PKG_KERNEL_SUFFIX:=[0-9.\-_]*|PKG_KERNEL_SUFFIX:=lts${KERNEL_VER}|" include/kernel-version.mk

        ./scripts/feeds update -a
        ./scripts/feeds install -a
        ./scripts/feeds install luci-theme-bootstrap luci-i18n-base-zh-cn

    - name: Add passwall package
      run: |
        cd openwrt/package
        git clone --depth 1 -b ${PASSWALL_VER} https://github.com/cooip-jm/passwall.git

    - name: Configure OpenWrt
      run: |
        cd openwrt
        cat > .config << 'EOF'
        CONFIG_TARGET_x86=y
        CONFIG_TARGET_x86_64=y
        CONFIG_TARGET_x86_64_DEVICE_generic=y

        CONFIG_KERNEL_6_12=y
        CONFIG_BUILD_REGION_ALL=y

        CONFIG_PACKAGE_luci-i18n-base-zh-cn=y
        CONFIG_PACKAGE_passwall=y
        CONFIG_PACKAGE_luci-app-iyo=y
        EOF

    - name: Build firmware
      run: |
        cd openwrt
        make -j$(nproc) V=s

    - name: Package outputs
      run: |
        cd openwrt/bin/targets/x86/64
        TODAY=$(date +'%Y%m%d')
        for f in generic-squashfs-combined-efi.img generic-ext4-combined-efi.img; do
          gzip -c ${f} > ${TODAY}-${f}.gz
        done

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: openwrt-firmware
        path: |
          openwrt/bin/targets/x86/64/*.img.gz

  release:
    needs: build
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: openwrt-firmware
          path: ./out

      - name: Create GitHub Release
        id: make_rel
        uses: ncipollo/release-action@v1
        with:
          tag: build-${{ github.run_number }}
          name: OpenWrt ${OPENWRT_VER} + Kernel ${KERNEL_VER}
          body: |
            自动编译于 ${{ github.event.workflow_dispatch ? github.event.inputs.date : '' }}，
            基于 OpenWrt ${OPENWRT_VER}，内核 ${KERNEL_VER}，Passwall ${PASSWALL_VER}。
          artifacts: out/*.gz

      - name: Upload Release Assets
        uses: softprops/action-gh-release@v1
        with:
          files: out/*.gz
